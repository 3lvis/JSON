import Foundation

/// The ParsingError codes generated by JSON.
public enum ParsingError: ErrorType {
    case NotFound, Failed
}

public class JSON {
    /**
    Returns a JSON object from a file.
    - parameter fileName: The name of the file, the expected extension is `.json`.
    - parameter bundle:  The NSBundle where the file is located, by default is the main bundle.
    - returns: A JSON object, it can be either a Dictionary or an Array.
    */
    public class func from(fileName: String, bundle: NSBundle = NSBundle.mainBundle()) throws -> AnyObject? {
        var JSON: AnyObject?

        guard let url = NSURL(string: fileName), filePath = bundle.pathForResource(url.URLByDeletingPathExtension?.absoluteString, ofType: url.pathExtension) else { throw ParsingError.NotFound }

        guard let data = NSData(contentsOfFile: filePath) else { throw ParsingError.Failed }

        JSON = try data.toJSON()

        return JSON
    }
}

extension NSData {
    /**
    Converts NSData to a JSON object.
    - returns: A JSON object, it can be either a Dictionary or an Array.
    */
    public func toJSON() throws -> AnyObject? {
        var JSON: AnyObject?
        do {
            JSON = try NSJSONSerialization.JSONObjectWithData(self, options: [])
        } catch {
            throw ParsingError.Failed
        }
        
        return JSON
    }
}
